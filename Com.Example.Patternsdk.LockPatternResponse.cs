//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Example.Patternsdk {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse']"
	[global::Android.Runtime.Register ("com/example/patternsdk/LockPatternResponse", DoNotGenerateAcw=true)]
	public abstract partial class LockPatternResponse : global::Java.Lang.Object {
		// Metadata.xml XPath class reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.BiometricRequired']"
		[global::Android.Runtime.Register ("com/example/patternsdk/LockPatternResponse$BiometricRequired", DoNotGenerateAcw=true)]
		public sealed partial class BiometricRequired : global::Com.Example.Patternsdk.LockPatternResponse {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/example/patternsdk/LockPatternResponse$BiometricRequired", typeof (BiometricRequired));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			internal BiometricRequired (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.BiometricRequired']/constructor[@name='LockPatternResponse.BiometricRequired' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
			[Register (".ctor", "(Ljava/lang/String;Ljava/lang/String;)V", "")]
			public unsafe BiometricRequired (string message, string sessionId) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "(Ljava/lang/String;Ljava/lang/String;)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_message = JNIEnv.NewString ((string?)message);
				IntPtr native_sessionId = JNIEnv.NewString ((string?)sessionId);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue (native_message);
					__args [1] = new JniArgumentValue (native_sessionId);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_message);
					JNIEnv.DeleteLocalRef (native_sessionId);
				}
			}

			public unsafe string Message {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.BiometricRequired']/method[@name='getMessage' and count(parameter)=0]"
				[Register ("getMessage", "()Ljava/lang/String;", "")]
				get {
					const string __id = "getMessage.()Ljava/lang/String;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
					} finally {
					}
				}
			}

			public unsafe string SessionId {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.BiometricRequired']/method[@name='getSessionId' and count(parameter)=0]"
				[Register ("getSessionId", "()Ljava/lang/String;", "")]
				get {
					const string __id = "getSessionId.()Ljava/lang/String;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
					} finally {
					}
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.BiometricRequired']/method[@name='component1' and count(parameter)=0]"
			[Register ("component1", "()Ljava/lang/String;", "")]
			public unsafe string Component1 ()
			{
				const string __id = "component1.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.BiometricRequired']/method[@name='component2' and count(parameter)=0]"
			[Register ("component2", "()Ljava/lang/String;", "")]
			public unsafe string Component2 ()
			{
				const string __id = "component2.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.BiometricRequired']/method[@name='copy' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
			[Register ("copy", "(Ljava/lang/String;Ljava/lang/String;)Lcom/example/patternsdk/LockPatternResponse$BiometricRequired;", "")]
			public unsafe global::Com.Example.Patternsdk.LockPatternResponse.BiometricRequired Copy (string message, string sessionId)
			{
				const string __id = "copy.(Ljava/lang/String;Ljava/lang/String;)Lcom/example/patternsdk/LockPatternResponse$BiometricRequired;";
				IntPtr native_message = JNIEnv.NewString ((string?)message);
				IntPtr native_sessionId = JNIEnv.NewString ((string?)sessionId);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue (native_message);
					__args [1] = new JniArgumentValue (native_sessionId);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Example.Patternsdk.LockPatternResponse.BiometricRequired> (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
				} finally {
					JNIEnv.DeleteLocalRef (native_message);
					JNIEnv.DeleteLocalRef (native_sessionId);
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Error']"
		[global::Android.Runtime.Register ("com/example/patternsdk/LockPatternResponse$Error", DoNotGenerateAcw=true)]
		public sealed partial class Error : global::Com.Example.Patternsdk.LockPatternResponse {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/example/patternsdk/LockPatternResponse$Error", typeof (Error));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			internal Error (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Error']/constructor[@name='LockPatternResponse.Error' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register (".ctor", "(Ljava/lang/String;)V", "")]
			public unsafe Error (string message) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "(Ljava/lang/String;)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_message = JNIEnv.NewString ((string?)message);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_message);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_message);
				}
			}

			public unsafe string Message {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Error']/method[@name='getMessage' and count(parameter)=0]"
				[Register ("getMessage", "()Ljava/lang/String;", "")]
				get {
					const string __id = "getMessage.()Ljava/lang/String;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
					} finally {
					}
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Error']/method[@name='component1' and count(parameter)=0]"
			[Register ("component1", "()Ljava/lang/String;", "")]
			public unsafe string Component1 ()
			{
				const string __id = "component1.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Error']/method[@name='copy' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("copy", "(Ljava/lang/String;)Lcom/example/patternsdk/LockPatternResponse$Error;", "")]
			public unsafe global::Com.Example.Patternsdk.LockPatternResponse.Error Copy (string message)
			{
				const string __id = "copy.(Ljava/lang/String;)Lcom/example/patternsdk/LockPatternResponse$Error;";
				IntPtr native_message = JNIEnv.NewString ((string?)message);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_message);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Example.Patternsdk.LockPatternResponse.Error> (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
				} finally {
					JNIEnv.DeleteLocalRef (native_message);
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.IncorrectPattern']"
		[global::Android.Runtime.Register ("com/example/patternsdk/LockPatternResponse$IncorrectPattern", DoNotGenerateAcw=true)]
		public sealed partial class IncorrectPattern : global::Com.Example.Patternsdk.LockPatternResponse {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/example/patternsdk/LockPatternResponse$IncorrectPattern", typeof (IncorrectPattern));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			internal IncorrectPattern (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.IncorrectPattern']/constructor[@name='LockPatternResponse.IncorrectPattern' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register (".ctor", "(Ljava/lang/String;)V", "")]
			public unsafe IncorrectPattern (string message) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "(Ljava/lang/String;)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_message = JNIEnv.NewString ((string?)message);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_message);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_message);
				}
			}

			public unsafe string Message {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.IncorrectPattern']/method[@name='getMessage' and count(parameter)=0]"
				[Register ("getMessage", "()Ljava/lang/String;", "")]
				get {
					const string __id = "getMessage.()Ljava/lang/String;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
					} finally {
					}
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.IncorrectPattern']/method[@name='component1' and count(parameter)=0]"
			[Register ("component1", "()Ljava/lang/String;", "")]
			public unsafe string Component1 ()
			{
				const string __id = "component1.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.IncorrectPattern']/method[@name='copy' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("copy", "(Ljava/lang/String;)Lcom/example/patternsdk/LockPatternResponse$IncorrectPattern;", "")]
			public unsafe global::Com.Example.Patternsdk.LockPatternResponse.IncorrectPattern Copy (string message)
			{
				const string __id = "copy.(Ljava/lang/String;)Lcom/example/patternsdk/LockPatternResponse$IncorrectPattern;";
				IntPtr native_message = JNIEnv.NewString ((string?)message);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_message);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Example.Patternsdk.LockPatternResponse.IncorrectPattern> (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
				} finally {
					JNIEnv.DeleteLocalRef (native_message);
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.InsufficientData']"
		[global::Android.Runtime.Register ("com/example/patternsdk/LockPatternResponse$InsufficientData", DoNotGenerateAcw=true)]
		public sealed partial class InsufficientData : global::Com.Example.Patternsdk.LockPatternResponse {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/example/patternsdk/LockPatternResponse$InsufficientData", typeof (InsufficientData));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			internal InsufficientData (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.InsufficientData']/constructor[@name='LockPatternResponse.InsufficientData' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register (".ctor", "(Ljava/lang/String;)V", "")]
			public unsafe InsufficientData (string message) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "(Ljava/lang/String;)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_message = JNIEnv.NewString ((string?)message);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_message);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_message);
				}
			}

			public unsafe string Message {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.InsufficientData']/method[@name='getMessage' and count(parameter)=0]"
				[Register ("getMessage", "()Ljava/lang/String;", "")]
				get {
					const string __id = "getMessage.()Ljava/lang/String;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
					} finally {
					}
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.InsufficientData']/method[@name='component1' and count(parameter)=0]"
			[Register ("component1", "()Ljava/lang/String;", "")]
			public unsafe string Component1 ()
			{
				const string __id = "component1.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.InsufficientData']/method[@name='copy' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("copy", "(Ljava/lang/String;)Lcom/example/patternsdk/LockPatternResponse$InsufficientData;", "")]
			public unsafe global::Com.Example.Patternsdk.LockPatternResponse.InsufficientData Copy (string message)
			{
				const string __id = "copy.(Ljava/lang/String;)Lcom/example/patternsdk/LockPatternResponse$InsufficientData;";
				IntPtr native_message = JNIEnv.NewString ((string?)message);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_message);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Example.Patternsdk.LockPatternResponse.InsufficientData> (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
				} finally {
					JNIEnv.DeleteLocalRef (native_message);
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Intruder']"
		[global::Android.Runtime.Register ("com/example/patternsdk/LockPatternResponse$Intruder", DoNotGenerateAcw=true)]
		public sealed partial class Intruder : global::Com.Example.Patternsdk.LockPatternResponse {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/example/patternsdk/LockPatternResponse$Intruder", typeof (Intruder));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			internal Intruder (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Intruder']/constructor[@name='LockPatternResponse.Intruder' and count(parameter)=5 and parameter[1][@type='java.lang.Double'] and parameter[2][@type='java.lang.Double'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.Double'] and parameter[5][@type='java.lang.String']]"
			[Register (".ctor", "(Ljava/lang/Double;Ljava/lang/Double;Ljava/lang/String;Ljava/lang/Double;Ljava/lang/String;)V", "")]
			public unsafe Intruder (global::Java.Lang.Double? locationRiskScore, global::Java.Lang.Double? riskScore, string sessionId, global::Java.Lang.Double? timeRiskScore, string userType) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "(Ljava/lang/Double;Ljava/lang/Double;Ljava/lang/String;Ljava/lang/Double;Ljava/lang/String;)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_sessionId = JNIEnv.NewString ((string?)sessionId);
				IntPtr native_userType = JNIEnv.NewString ((string?)userType);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [5];
					__args [0] = new JniArgumentValue ((locationRiskScore == null) ? IntPtr.Zero : ((global::Java.Lang.Object) locationRiskScore).Handle);
					__args [1] = new JniArgumentValue ((riskScore == null) ? IntPtr.Zero : ((global::Java.Lang.Object) riskScore).Handle);
					__args [2] = new JniArgumentValue (native_sessionId);
					__args [3] = new JniArgumentValue ((timeRiskScore == null) ? IntPtr.Zero : ((global::Java.Lang.Object) timeRiskScore).Handle);
					__args [4] = new JniArgumentValue (native_userType);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_sessionId);
					JNIEnv.DeleteLocalRef (native_userType);
					global::System.GC.KeepAlive (locationRiskScore);
					global::System.GC.KeepAlive (riskScore);
					global::System.GC.KeepAlive (timeRiskScore);
				}
			}

			public unsafe global::Java.Lang.Double? LocationRiskScore {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Intruder']/method[@name='getLocationRiskScore' and count(parameter)=0]"
				[Register ("getLocationRiskScore", "()Ljava/lang/Double;", "")]
				get {
					const string __id = "getLocationRiskScore.()Ljava/lang/Double;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return global::Java.Lang.Object.GetObject<global::Java.Lang.Double> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			public unsafe global::Java.Lang.Double? RiskScore {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Intruder']/method[@name='getRiskScore' and count(parameter)=0]"
				[Register ("getRiskScore", "()Ljava/lang/Double;", "")]
				get {
					const string __id = "getRiskScore.()Ljava/lang/Double;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return global::Java.Lang.Object.GetObject<global::Java.Lang.Double> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			public unsafe string SessionId {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Intruder']/method[@name='getSessionId' and count(parameter)=0]"
				[Register ("getSessionId", "()Ljava/lang/String;", "")]
				get {
					const string __id = "getSessionId.()Ljava/lang/String;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
					} finally {
					}
				}
			}

			public unsafe global::Java.Lang.Double? TimeRiskScore {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Intruder']/method[@name='getTimeRiskScore' and count(parameter)=0]"
				[Register ("getTimeRiskScore", "()Ljava/lang/Double;", "")]
				get {
					const string __id = "getTimeRiskScore.()Ljava/lang/Double;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return global::Java.Lang.Object.GetObject<global::Java.Lang.Double> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			public unsafe string UserType {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Intruder']/method[@name='getUserType' and count(parameter)=0]"
				[Register ("getUserType", "()Ljava/lang/String;", "")]
				get {
					const string __id = "getUserType.()Ljava/lang/String;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
					} finally {
					}
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Intruder']/method[@name='component1' and count(parameter)=0]"
			[Register ("component1", "()Ljava/lang/Double;", "")]
			public unsafe global::Java.Lang.Double? Component1 ()
			{
				const string __id = "component1.()Ljava/lang/Double;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Lang.Double> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Intruder']/method[@name='component2' and count(parameter)=0]"
			[Register ("component2", "()Ljava/lang/Double;", "")]
			public unsafe global::Java.Lang.Double? Component2 ()
			{
				const string __id = "component2.()Ljava/lang/Double;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Lang.Double> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Intruder']/method[@name='component3' and count(parameter)=0]"
			[Register ("component3", "()Ljava/lang/String;", "")]
			public unsafe string Component3 ()
			{
				const string __id = "component3.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Intruder']/method[@name='component4' and count(parameter)=0]"
			[Register ("component4", "()Ljava/lang/Double;", "")]
			public unsafe global::Java.Lang.Double? Component4 ()
			{
				const string __id = "component4.()Ljava/lang/Double;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Lang.Double> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Intruder']/method[@name='component5' and count(parameter)=0]"
			[Register ("component5", "()Ljava/lang/String;", "")]
			public unsafe string Component5 ()
			{
				const string __id = "component5.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Intruder']/method[@name='copy' and count(parameter)=5 and parameter[1][@type='java.lang.Double'] and parameter[2][@type='java.lang.Double'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.Double'] and parameter[5][@type='java.lang.String']]"
			[Register ("copy", "(Ljava/lang/Double;Ljava/lang/Double;Ljava/lang/String;Ljava/lang/Double;Ljava/lang/String;)Lcom/example/patternsdk/LockPatternResponse$Intruder;", "")]
			public unsafe global::Com.Example.Patternsdk.LockPatternResponse.Intruder Copy (global::Java.Lang.Double? locationRiskScore, global::Java.Lang.Double? riskScore, string sessionId, global::Java.Lang.Double? timeRiskScore, string userType)
			{
				const string __id = "copy.(Ljava/lang/Double;Ljava/lang/Double;Ljava/lang/String;Ljava/lang/Double;Ljava/lang/String;)Lcom/example/patternsdk/LockPatternResponse$Intruder;";
				IntPtr native_sessionId = JNIEnv.NewString ((string?)sessionId);
				IntPtr native_userType = JNIEnv.NewString ((string?)userType);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [5];
					__args [0] = new JniArgumentValue ((locationRiskScore == null) ? IntPtr.Zero : ((global::Java.Lang.Object) locationRiskScore).Handle);
					__args [1] = new JniArgumentValue ((riskScore == null) ? IntPtr.Zero : ((global::Java.Lang.Object) riskScore).Handle);
					__args [2] = new JniArgumentValue (native_sessionId);
					__args [3] = new JniArgumentValue ((timeRiskScore == null) ? IntPtr.Zero : ((global::Java.Lang.Object) timeRiskScore).Handle);
					__args [4] = new JniArgumentValue (native_userType);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Example.Patternsdk.LockPatternResponse.Intruder> (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
				} finally {
					JNIEnv.DeleteLocalRef (native_sessionId);
					JNIEnv.DeleteLocalRef (native_userType);
					global::System.GC.KeepAlive (locationRiskScore);
					global::System.GC.KeepAlive (riskScore);
					global::System.GC.KeepAlive (timeRiskScore);
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Legitimate']"
		[global::Android.Runtime.Register ("com/example/patternsdk/LockPatternResponse$Legitimate", DoNotGenerateAcw=true)]
		public sealed partial class Legitimate : global::Com.Example.Patternsdk.LockPatternResponse {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/example/patternsdk/LockPatternResponse$Legitimate", typeof (Legitimate));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			internal Legitimate (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Legitimate']/constructor[@name='LockPatternResponse.Legitimate' and count(parameter)=5 and parameter[1][@type='java.lang.Double'] and parameter[2][@type='java.lang.Double'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.Double'] and parameter[5][@type='java.lang.String']]"
			[Register (".ctor", "(Ljava/lang/Double;Ljava/lang/Double;Ljava/lang/String;Ljava/lang/Double;Ljava/lang/String;)V", "")]
			public unsafe Legitimate (global::Java.Lang.Double? locationRiskScore, global::Java.Lang.Double? riskScore, string sessionId, global::Java.Lang.Double? timeRiskScore, string userType) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "(Ljava/lang/Double;Ljava/lang/Double;Ljava/lang/String;Ljava/lang/Double;Ljava/lang/String;)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_sessionId = JNIEnv.NewString ((string?)sessionId);
				IntPtr native_userType = JNIEnv.NewString ((string?)userType);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [5];
					__args [0] = new JniArgumentValue ((locationRiskScore == null) ? IntPtr.Zero : ((global::Java.Lang.Object) locationRiskScore).Handle);
					__args [1] = new JniArgumentValue ((riskScore == null) ? IntPtr.Zero : ((global::Java.Lang.Object) riskScore).Handle);
					__args [2] = new JniArgumentValue (native_sessionId);
					__args [3] = new JniArgumentValue ((timeRiskScore == null) ? IntPtr.Zero : ((global::Java.Lang.Object) timeRiskScore).Handle);
					__args [4] = new JniArgumentValue (native_userType);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_sessionId);
					JNIEnv.DeleteLocalRef (native_userType);
					global::System.GC.KeepAlive (locationRiskScore);
					global::System.GC.KeepAlive (riskScore);
					global::System.GC.KeepAlive (timeRiskScore);
				}
			}

			public unsafe global::Java.Lang.Double? LocationRiskScore {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Legitimate']/method[@name='getLocationRiskScore' and count(parameter)=0]"
				[Register ("getLocationRiskScore", "()Ljava/lang/Double;", "")]
				get {
					const string __id = "getLocationRiskScore.()Ljava/lang/Double;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return global::Java.Lang.Object.GetObject<global::Java.Lang.Double> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			public unsafe global::Java.Lang.Double? RiskScore {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Legitimate']/method[@name='getRiskScore' and count(parameter)=0]"
				[Register ("getRiskScore", "()Ljava/lang/Double;", "")]
				get {
					const string __id = "getRiskScore.()Ljava/lang/Double;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return global::Java.Lang.Object.GetObject<global::Java.Lang.Double> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			public unsafe string SessionId {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Legitimate']/method[@name='getSessionId' and count(parameter)=0]"
				[Register ("getSessionId", "()Ljava/lang/String;", "")]
				get {
					const string __id = "getSessionId.()Ljava/lang/String;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
					} finally {
					}
				}
			}

			public unsafe global::Java.Lang.Double? TimeRiskScore {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Legitimate']/method[@name='getTimeRiskScore' and count(parameter)=0]"
				[Register ("getTimeRiskScore", "()Ljava/lang/Double;", "")]
				get {
					const string __id = "getTimeRiskScore.()Ljava/lang/Double;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return global::Java.Lang.Object.GetObject<global::Java.Lang.Double> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			public unsafe string UserType {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Legitimate']/method[@name='getUserType' and count(parameter)=0]"
				[Register ("getUserType", "()Ljava/lang/String;", "")]
				get {
					const string __id = "getUserType.()Ljava/lang/String;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
					} finally {
					}
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Legitimate']/method[@name='component1' and count(parameter)=0]"
			[Register ("component1", "()Ljava/lang/Double;", "")]
			public unsafe global::Java.Lang.Double? Component1 ()
			{
				const string __id = "component1.()Ljava/lang/Double;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Lang.Double> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Legitimate']/method[@name='component2' and count(parameter)=0]"
			[Register ("component2", "()Ljava/lang/Double;", "")]
			public unsafe global::Java.Lang.Double? Component2 ()
			{
				const string __id = "component2.()Ljava/lang/Double;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Lang.Double> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Legitimate']/method[@name='component3' and count(parameter)=0]"
			[Register ("component3", "()Ljava/lang/String;", "")]
			public unsafe string Component3 ()
			{
				const string __id = "component3.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Legitimate']/method[@name='component4' and count(parameter)=0]"
			[Register ("component4", "()Ljava/lang/Double;", "")]
			public unsafe global::Java.Lang.Double? Component4 ()
			{
				const string __id = "component4.()Ljava/lang/Double;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Lang.Double> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Legitimate']/method[@name='component5' and count(parameter)=0]"
			[Register ("component5", "()Ljava/lang/String;", "")]
			public unsafe string Component5 ()
			{
				const string __id = "component5.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.Legitimate']/method[@name='copy' and count(parameter)=5 and parameter[1][@type='java.lang.Double'] and parameter[2][@type='java.lang.Double'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.Double'] and parameter[5][@type='java.lang.String']]"
			[Register ("copy", "(Ljava/lang/Double;Ljava/lang/Double;Ljava/lang/String;Ljava/lang/Double;Ljava/lang/String;)Lcom/example/patternsdk/LockPatternResponse$Legitimate;", "")]
			public unsafe global::Com.Example.Patternsdk.LockPatternResponse.Legitimate Copy (global::Java.Lang.Double? locationRiskScore, global::Java.Lang.Double? riskScore, string sessionId, global::Java.Lang.Double? timeRiskScore, string userType)
			{
				const string __id = "copy.(Ljava/lang/Double;Ljava/lang/Double;Ljava/lang/String;Ljava/lang/Double;Ljava/lang/String;)Lcom/example/patternsdk/LockPatternResponse$Legitimate;";
				IntPtr native_sessionId = JNIEnv.NewString ((string?)sessionId);
				IntPtr native_userType = JNIEnv.NewString ((string?)userType);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [5];
					__args [0] = new JniArgumentValue ((locationRiskScore == null) ? IntPtr.Zero : ((global::Java.Lang.Object) locationRiskScore).Handle);
					__args [1] = new JniArgumentValue ((riskScore == null) ? IntPtr.Zero : ((global::Java.Lang.Object) riskScore).Handle);
					__args [2] = new JniArgumentValue (native_sessionId);
					__args [3] = new JniArgumentValue ((timeRiskScore == null) ? IntPtr.Zero : ((global::Java.Lang.Object) timeRiskScore).Handle);
					__args [4] = new JniArgumentValue (native_userType);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Example.Patternsdk.LockPatternResponse.Legitimate> (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
				} finally {
					JNIEnv.DeleteLocalRef (native_sessionId);
					JNIEnv.DeleteLocalRef (native_userType);
					global::System.GC.KeepAlive (locationRiskScore);
					global::System.GC.KeepAlive (riskScore);
					global::System.GC.KeepAlive (timeRiskScore);
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.ProfileCreated']"
		[global::Android.Runtime.Register ("com/example/patternsdk/LockPatternResponse$ProfileCreated", DoNotGenerateAcw=true)]
		public sealed partial class ProfileCreated : global::Com.Example.Patternsdk.LockPatternResponse {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/example/patternsdk/LockPatternResponse$ProfileCreated", typeof (ProfileCreated));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			internal ProfileCreated (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.ProfileCreated']/constructor[@name='LockPatternResponse.ProfileCreated' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register (".ctor", "(Ljava/lang/String;)V", "")]
			public unsafe ProfileCreated (string message) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "(Ljava/lang/String;)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_message = JNIEnv.NewString ((string?)message);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_message);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_message);
				}
			}

			public unsafe string Message {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.ProfileCreated']/method[@name='getMessage' and count(parameter)=0]"
				[Register ("getMessage", "()Ljava/lang/String;", "")]
				get {
					const string __id = "getMessage.()Ljava/lang/String;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
					} finally {
					}
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.ProfileCreated']/method[@name='component1' and count(parameter)=0]"
			[Register ("component1", "()Ljava/lang/String;", "")]
			public unsafe string Component1 ()
			{
				const string __id = "component1.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='LockPatternResponse.ProfileCreated']/method[@name='copy' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("copy", "(Ljava/lang/String;)Lcom/example/patternsdk/LockPatternResponse$ProfileCreated;", "")]
			public unsafe global::Com.Example.Patternsdk.LockPatternResponse.ProfileCreated Copy (string message)
			{
				const string __id = "copy.(Ljava/lang/String;)Lcom/example/patternsdk/LockPatternResponse$ProfileCreated;";
				IntPtr native_message = JNIEnv.NewString ((string?)message);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_message);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Example.Patternsdk.LockPatternResponse.ProfileCreated> (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
				} finally {
					JNIEnv.DeleteLocalRef (native_message);
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/example/patternsdk/LockPatternResponse", typeof (LockPatternResponse));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected LockPatternResponse (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

	}

	[global::Android.Runtime.Register ("com/example/patternsdk/LockPatternResponse", DoNotGenerateAcw=true)]
	internal partial class LockPatternResponseInvoker : LockPatternResponse {
		public LockPatternResponseInvoker (IntPtr handle, JniHandleOwnership transfer) : base (handle, transfer)
		{
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/example/patternsdk/LockPatternResponse", typeof (LockPatternResponseInvoker));

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

	}
}
