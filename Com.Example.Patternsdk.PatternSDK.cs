//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Example.Patternsdk {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.example.patternsdk']/class[@name='PatternSDK']"
	[global::Android.Runtime.Register ("com/example/patternsdk/PatternSDK", DoNotGenerateAcw=true)]
	public sealed partial class PatternSDK : global::Java.Lang.Object {

		// Metadata.xml XPath field reference: path="/api/package[@name='com.example.patternsdk']/class[@name='PatternSDK']/field[@name='INSTANCE']"
		[Register ("INSTANCE")]
		public static global::Com.Example.Patternsdk.PatternSDK Instance {
			get {
				const string __id = "INSTANCE.Lcom/example/patternsdk/PatternSDK;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Com.Example.Patternsdk.PatternSDK> (__v.Handle, JniHandleOwnership.TransferLocalRef)!;
			}
		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.example.patternsdk']/class[@name='PatternSDK.NameCheckResult']"
		[global::Android.Runtime.Register ("com/example/patternsdk/PatternSDK$NameCheckResult", DoNotGenerateAcw=true)]
		public sealed partial class NameCheckResult : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/example/patternsdk/PatternSDK$NameCheckResult", typeof (NameCheckResult));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			internal NameCheckResult (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.example.patternsdk']/class[@name='PatternSDK.NameCheckResult']/constructor[@name='PatternSDK.NameCheckResult' and count(parameter)=7 and parameter[1][@type='boolean'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.Integer'] and parameter[6][@type='java.lang.Integer'] and parameter[7][@type='java.lang.String']]"
			[Register (".ctor", "(ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;)V", "")]
			public unsafe NameCheckResult (bool isSuccessful, string? username, string? userId, string? patternType, global::Java.Lang.Integer? currentPhase, global::Java.Lang.Integer? authenticationCount, string? errorMessage) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "(ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_username = JNIEnv.NewString ((string?)username);
				IntPtr native_userId = JNIEnv.NewString ((string?)userId);
				IntPtr native_patternType = JNIEnv.NewString ((string?)patternType);
				IntPtr native_errorMessage = JNIEnv.NewString ((string?)errorMessage);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [7];
					__args [0] = new JniArgumentValue (isSuccessful);
					__args [1] = new JniArgumentValue (native_username);
					__args [2] = new JniArgumentValue (native_userId);
					__args [3] = new JniArgumentValue (native_patternType);
					__args [4] = new JniArgumentValue ((currentPhase == null) ? IntPtr.Zero : ((global::Java.Lang.Object) currentPhase).Handle);
					__args [5] = new JniArgumentValue ((authenticationCount == null) ? IntPtr.Zero : ((global::Java.Lang.Object) authenticationCount).Handle);
					__args [6] = new JniArgumentValue (native_errorMessage);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_username);
					JNIEnv.DeleteLocalRef (native_userId);
					JNIEnv.DeleteLocalRef (native_patternType);
					JNIEnv.DeleteLocalRef (native_errorMessage);
					global::System.GC.KeepAlive (currentPhase);
					global::System.GC.KeepAlive (authenticationCount);
				}
			}

			public unsafe global::Java.Lang.Integer? AuthenticationCount {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='PatternSDK.NameCheckResult']/method[@name='getAuthenticationCount' and count(parameter)=0]"
				[Register ("getAuthenticationCount", "()Ljava/lang/Integer;", "")]
				get {
					const string __id = "getAuthenticationCount.()Ljava/lang/Integer;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return global::Java.Lang.Object.GetObject<global::Java.Lang.Integer> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			public unsafe global::Java.Lang.Integer? CurrentPhase {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='PatternSDK.NameCheckResult']/method[@name='getCurrentPhase' and count(parameter)=0]"
				[Register ("getCurrentPhase", "()Ljava/lang/Integer;", "")]
				get {
					const string __id = "getCurrentPhase.()Ljava/lang/Integer;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return global::Java.Lang.Object.GetObject<global::Java.Lang.Integer> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			public unsafe string? ErrorMessage {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='PatternSDK.NameCheckResult']/method[@name='getErrorMessage' and count(parameter)=0]"
				[Register ("getErrorMessage", "()Ljava/lang/String;", "")]
				get {
					const string __id = "getErrorMessage.()Ljava/lang/String;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			public unsafe bool IsSuccessful {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='PatternSDK.NameCheckResult']/method[@name='isSuccessful' and count(parameter)=0]"
				[Register ("isSuccessful", "()Z", "")]
				get {
					const string __id = "isSuccessful.()Z";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualBooleanMethod (__id, this, null);
						return __rm;
					} finally {
					}
				}
			}

			public unsafe string? PatternType {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='PatternSDK.NameCheckResult']/method[@name='getPatternType' and count(parameter)=0]"
				[Register ("getPatternType", "()Ljava/lang/String;", "")]
				get {
					const string __id = "getPatternType.()Ljava/lang/String;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			public unsafe string? UserId {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='PatternSDK.NameCheckResult']/method[@name='getUserId' and count(parameter)=0]"
				[Register ("getUserId", "()Ljava/lang/String;", "")]
				get {
					const string __id = "getUserId.()Ljava/lang/String;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			public unsafe string? Username {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='PatternSDK.NameCheckResult']/method[@name='getUsername' and count(parameter)=0]"
				[Register ("getUsername", "()Ljava/lang/String;", "")]
				get {
					const string __id = "getUsername.()Ljava/lang/String;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='PatternSDK.NameCheckResult']/method[@name='component1' and count(parameter)=0]"
			[Register ("component1", "()Z", "")]
			public unsafe bool Component1 ()
			{
				const string __id = "component1.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='PatternSDK.NameCheckResult']/method[@name='component2' and count(parameter)=0]"
			[Register ("component2", "()Ljava/lang/String;", "")]
			public unsafe string? Component2 ()
			{
				const string __id = "component2.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='PatternSDK.NameCheckResult']/method[@name='component3' and count(parameter)=0]"
			[Register ("component3", "()Ljava/lang/String;", "")]
			public unsafe string? Component3 ()
			{
				const string __id = "component3.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='PatternSDK.NameCheckResult']/method[@name='component4' and count(parameter)=0]"
			[Register ("component4", "()Ljava/lang/String;", "")]
			public unsafe string? Component4 ()
			{
				const string __id = "component4.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='PatternSDK.NameCheckResult']/method[@name='component5' and count(parameter)=0]"
			[Register ("component5", "()Ljava/lang/Integer;", "")]
			public unsafe global::Java.Lang.Integer? Component5 ()
			{
				const string __id = "component5.()Ljava/lang/Integer;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Lang.Integer> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='PatternSDK.NameCheckResult']/method[@name='component6' and count(parameter)=0]"
			[Register ("component6", "()Ljava/lang/Integer;", "")]
			public unsafe global::Java.Lang.Integer? Component6 ()
			{
				const string __id = "component6.()Ljava/lang/Integer;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Lang.Integer> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='PatternSDK.NameCheckResult']/method[@name='component7' and count(parameter)=0]"
			[Register ("component7", "()Ljava/lang/String;", "")]
			public unsafe string? Component7 ()
			{
				const string __id = "component7.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='PatternSDK.NameCheckResult']/method[@name='copy' and count(parameter)=7 and parameter[1][@type='boolean'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.Integer'] and parameter[6][@type='java.lang.Integer'] and parameter[7][@type='java.lang.String']]"
			[Register ("copy", "(ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;)Lcom/example/patternsdk/PatternSDK$NameCheckResult;", "")]
			public unsafe global::Com.Example.Patternsdk.PatternSDK.NameCheckResult Copy (bool isSuccessful, string? username, string? userId, string? patternType, global::Java.Lang.Integer? currentPhase, global::Java.Lang.Integer? authenticationCount, string? errorMessage)
			{
				const string __id = "copy.(ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;)Lcom/example/patternsdk/PatternSDK$NameCheckResult;";
				IntPtr native_username = JNIEnv.NewString ((string?)username);
				IntPtr native_userId = JNIEnv.NewString ((string?)userId);
				IntPtr native_patternType = JNIEnv.NewString ((string?)patternType);
				IntPtr native_errorMessage = JNIEnv.NewString ((string?)errorMessage);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [7];
					__args [0] = new JniArgumentValue (isSuccessful);
					__args [1] = new JniArgumentValue (native_username);
					__args [2] = new JniArgumentValue (native_userId);
					__args [3] = new JniArgumentValue (native_patternType);
					__args [4] = new JniArgumentValue ((currentPhase == null) ? IntPtr.Zero : ((global::Java.Lang.Object) currentPhase).Handle);
					__args [5] = new JniArgumentValue ((authenticationCount == null) ? IntPtr.Zero : ((global::Java.Lang.Object) authenticationCount).Handle);
					__args [6] = new JniArgumentValue (native_errorMessage);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Example.Patternsdk.PatternSDK.NameCheckResult> (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
				} finally {
					JNIEnv.DeleteLocalRef (native_username);
					JNIEnv.DeleteLocalRef (native_userId);
					JNIEnv.DeleteLocalRef (native_patternType);
					JNIEnv.DeleteLocalRef (native_errorMessage);
					global::System.GC.KeepAlive (currentPhase);
					global::System.GC.KeepAlive (authenticationCount);
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/example/patternsdk/PatternSDK", typeof (PatternSDK));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		internal PatternSDK (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.example.patternsdk']/class[@name='PatternSDK']/method[@name='getAndroidId' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("getAndroidId", "(Landroid/content/Context;)Ljava/lang/String;", "")]
		public unsafe string GetAndroidId (global::Android.Content.Context context)
		{
			const string __id = "getAndroidId.(Landroid/content/Context;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef)!;
			} finally {
				global::System.GC.KeepAlive (context);
			}
		}

	}
}
